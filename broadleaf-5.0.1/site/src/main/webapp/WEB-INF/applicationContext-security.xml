<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:component-scan base-package="org.broadleafcommerce.common.web.security"/>
    <context:component-scan base-package="org.broadleafcommerce.profile.web.core.security"/>
    <context:component-scan base-package="org.broadleafcommerce.core.web.order.security"/>
    
    <!-- Resources do not need security -->
    <sec:http pattern="/css/**" security="none" />
    <sec:http pattern="/fonts/**" security="none" />
    <sec:http pattern="/img/**" security="none" />
    <sec:http pattern="/js/**" security="none" />
    <sec:http pattern="/**/${asset.server.url.prefix.internal}/**" security="none" />
    <sec:http pattern="/favicon.ico" security="none" />       
    
    <!-- Set up Spring security for the application -->
    <sec:http auto-config="false" authentication-manager-ref="blAuthenticationManager" disable-url-rewriting="true">
        <!-- We handle session fixation protection ourselves  -->
        <sec:session-management session-fixation-protection="none" />
        
        <!-- Wishlist modifications live under /account, but we don't need HTTPS -->
        <sec:intercept-url pattern="/account/wishlist/**" access="ROLE_USER" requires-channel="any" />
        
        <!-- Specify these URLs as requiring HTTPS to encrypt user data  -->
        <sec:intercept-url pattern="/register*" requires-channel="https" />
        <sec:intercept-url pattern="/login*/**" requires-channel="https" />
        <sec:intercept-url pattern="/account/**" access="ROLE_USER" requires-channel="https" />
        <sec:intercept-url pattern="/checkout/**" requires-channel="https" />
        <sec:intercept-url pattern="/sample-checkout/**" requires-channel="https" />
        <sec:intercept-url pattern="/sample-giftcard/**" requires-channel="https" />
        <sec:intercept-url pattern="/confirmation/**" requires-channel="https" />
        
        <!-- Since the cart page is viewing as a modal, we want to allow it on any page -->
        <sec:intercept-url pattern="/cart/**" requires-channel="any" />
        
        <!-- All URLs not explicitly specified as https will be served under http -->
        <sec:intercept-url pattern="/" requires-channel="http"/>
        <sec:intercept-url pattern="/**" requires-channel="http"/>
        
        <!-- Define the login form along with the success and failure handlers -->
        <sec:form-login login-page='/login'
            authentication-success-handler-ref="blAuthenticationSuccessHandler"
            authentication-failure-handler-ref="blAuthenticationFailureHandler"
            login-processing-url="/login_post.htm" 
        />
        
        <!-- Provide the logout handler -->
        <sec:logout delete-cookies="ActiveID" invalidate-session="true" logout-url="/logout"/>
        
        <!-- Specify our custom filters -->
        <sec:custom-filter ref="blPreSecurityFilterChain" before="CHANNEL_FILTER"/>
        <sec:custom-filter ref="blCsrfFilter" before="FORM_LOGIN_FILTER"/>
        <sec:custom-filter ref="blSessionFixationProtectionFilter" before="SESSION_MANAGEMENT_FILTER"/>
        <sec:custom-filter ref="blPostSecurityFilterChain" after="SWITCH_USER_FILTER"/>
    </sec:http>
    
    <!--  The BLC Authentication manager.   -->
    <sec:authentication-manager alias="blAuthenticationManager">
        <sec:authentication-provider user-service-ref="blUserDetailsService">
            <sec:password-encoder ref="blPasswordEncoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>
    
    <!-- Configuration for salting user passwords. If you would like to change this property or generate a random salt to store
        on a per-customer basis or if you need to allow users to change their password then you will need to modify this
        configuration and likely provide a custom UserDetailsService. -->
    <bean id="blSaltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="id" />
    </bean>
    
    <bean id="blCsrfFilter" class="org.broadleafcommerce.common.security.handler.CsrfFilter" >
        <property name="excludedRequestPatterns">
            <list>
                <value>/sample-checkout/**</value>
                <value>/sample-giftcard/**</value>
                <value>/hosted/sample-checkout/**</value>
            </list>
        </property>
    </bean>

    <!-- Sets the login failure URL -->
    <bean id="blAuthenticationFailureHandler" class="org.broadleafcommerce.common.security.BroadleafAuthenticationFailureHandler">
        <constructor-arg value="/login?error=true" />
        <property name="redirectStrategy" ref="blAuthenticationFailureRedirectStrategy" />
    </bean>

    <!-- Sets the login success URL -->
    <bean id="blAuthenticationSuccessHandler" class="org.broadleafcommerce.core.web.order.security.BroadleafAuthenticationSuccessHandler">
        <property name="redirectStrategy" ref="blAuthenticationSuccessRedirectStrategy" />
        <property name="defaultTargetUrl" value="/" />
        <property name="targetUrlParameter" value="successUrl" />
        <property name="alwaysUseDefaultTargetUrl" value="false" />
    </bean>
    
</beans>
